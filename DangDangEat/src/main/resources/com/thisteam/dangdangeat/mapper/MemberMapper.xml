<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mapper 태그 내에 namespace 속성 지정 후 Mapper 인터페이스 위치 지정 -->
<mapper namespace="com.thisteam.dangdangeat.mapper.MemberMapper">
	
	<!-- 로그인, 패스워드 확인 -->
	<select id="selectPass" resultType="string">
		SELECT member_pass
			FROM member
			WHERE member_id = #{id}
				AND member_status = 'Y'
	</select>
  
  	<!-- 회원 정보 조회	-->
  	<select id="selectMemberInfo" resultType="com.thisteam.dangdangeat.vo.MemberVO">
  		SELECT member_id
  				, member_email
  				, member_name
  				, member_mobile
  				, member_addr1
  				, member_addr2
  				, member_postcode
  				, member_date
  				, member_point
  				, member_birth
  				, member_authStatus
			FROM member
			WHERE member_id = #{id}
  	</select>
  	
  	<!-- 회원 정보 수정 -->
  	<update id="modifyMemberInfo">
  		UPDATE member
  			SET member_pass = #{member_pass}
  				, member_email = #{member_email}  
  				, member_mobile = #{member_mobile}  
  				, member_addr1 = #{member_addr1}  
  				, member_addr2 = #{member_addr2}  
  				, member_postcode = #{member_postcode}  
  			WHERE
  				member_id = #{member_id}
  	</update>
  	
  	<!-- 회원 주문 수 조회 -->
  	<select id="selectMemberOrderCount" resultType="int">
  		SELECT COUNT(*)
  			FROM orders
  			WHERE member_id = #{id}
  				AND order_status = '1'
  	</select>
  	
  	<!-- 회원 쿠폰 수 조회 -->
  	<select id="selectMemberCouponCount" resultType="int">
  		SELECT COUNT(*)
  			FROM mc_view
  			WHERE member_id = #{id}
  				AND cp_status = 1
  				AND mc_stat = 1
  				AND mc_used = 'N'
  	</select>
  	
  	<!-- 회원 리뷰 수 조회 -->
  	<select id="selectMemberReviewCount" resultType="int">
  		SELECT COUNT(*)
  			FROM review
  			WHERE member_id = #{id}
  	</select>
  	
  	<!-- 회원 문의 수 조회 -->
  	<select id="selectMemberQnaCount" resultType="int">
  		SELECT COUNT(*)
  			FROM qna
  			WHERE member_id = #{id}
  	</select>
  	
  	<!-- 회원 상태 변경 -->
  	<update id="updateMember">
  		UPDATE member
  			SET member_status = #{member_status}
  			WHERE member_id = #{member_id}
  	</update>

  	<!-- 멤버 마이페이지 조회(주문, 쿠폰, 리뷰, 질문 수) -->
  	<select id="selectMemberMypageView" resultType="com.thisteam.dangdangeat.vo.Member_Mypage_ViewVO">
  		SELECT *
  			FROM member_mypage_view
  			WHERE member_id = #{id}
  	</select>
  	
  	<!-- 회원 정보 이메일 수정 -->
  	<update id="updateMemberEmail">
  		<!-- 이미 존재하는 이메일인지 확인 -->
<!--   		<selectKey resultType="string" order="BEFORE" keyProperty="memberName"> -->
<!--   			SELECT IFNULL(member_name, 'NotExist') -->
<!--   				FROM member -->
<!--   				WHERE  -->
<!--   					member_id = #{id} -->
<!--   					AND member_email = #{email} -->
<!--   		</selectKey> -->
  		<!-- 이미 존재하거나 탈퇴한 회원의 이메일이 아닐 때 -->
<!--   		<if test="!memberName.equals('NotExist')"> -->
  			UPDATE member
  				SET	member_email = #{email}
  					, member_authStatus = 'N'
  				WHERE member_id = #{id}
<!--   		</if> -->
  	</update>
  	
  	<!-- 회원 마스킹 아이디 조회 -->
  	<select id="selectMemberId" resultType="com.thisteam.dangdangeat.vo.MemberVO">
  		SELECT 
  			<![CDATA[REGEXP_REPLACE(member_id, '(?<=.{3}).', '*') AS masking_member_id]]>
			, member_name
			, member_email
  			FROM member
  			WHERE member_name = #{member_name}
  				AND member_email = #{member_email}
  				AND member_status = 'Y'
  	</select>
  	
  	<!-- 회원 정보 일치하는 비밀번호 조회 -->
  	<select id="selectMemberPass" resultType="com.thisteam.dangdangeat.vo.MemberVO">
  		SELECT
  			member_id
  			, member_pass
  			, member_name
  			, member_email
  			FROM member
  			WHERE member_id = #{member_id}
  				AND member_name = #{member_name}
  				AND member_email = #{member_email}
  				AND member_status = 'Y'
  	</select>
  	
  	<!-- 회원 임시 비밀번호 변경 -->
  	<update id="updateMemberPass">
  		UPDATE
  			member
  			SET member_pass = #{member_pass}
  			WHERE member_id = #{member_id}
  	</update>
    
    
    
 
   	<!--===================== sangwoo =========================-->
  	
  	<!-- 회원 아이디 중복 조회 -->
  	<select id="selectidCheck" resultType="String">
  		SELECT member_id
  			FROM member
  			WHERE member_id = #{id}
  	</select>
  	
  	<!-- 회원 이메일 중복 조회 -->
  	<select id="selectEmailCheck" resultType="String">
  		SELECT member_email
  			FROM member
  			WHERE member_email = #{email}
  	</select>
  	
  	<!-- 회원 가입 -->
  	<insert id="insertMemberJoin">
  		INSERT
  			INTO member
  			VALUES (
  				#{member_id}
  				,#{member_pass}
  				,#{member_email}
  				,#{member_name}
  				,#{member_mobile}
  				,#{member_addr1}
  				,#{member_addr2}
  				,#{member_postcode}
  				,now()
  				,0
  				,#{member_birth}
  				,'N'
  				,'N'
  				,'N'
  			)
  	</insert>
  	
  	<!-- 메일 인증 정보 등록 -->
  	<insert id="insertAuthMail">
  		INSERT
  			INTO auth
  			VALUES (
  				#{auth_id}
  				,#{auth_code}
  			)
  	</insert>
  	
  	<!-- 인증 메일 확인 업데이트 -->
  	<delete id="checkAuthMail">
  		DELETE
  			FROM auth
  			WHERE auth_code = #{auth_code} AND auth_id = #{auth_id}
  	</delete>
  	
  	<!-- 회원 메일 인증 상태 업데이트 -->
  	<update id="updateMemberAuth">
  		UPDATE member
  			SET member_authStatus = 'Y'
  			WHERE member_id = #{auth_id}
  	</update>
  	
  	<!--===================== sangwoo =========================-->
  	
</mapper>














